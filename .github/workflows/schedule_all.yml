name: Scheduled release of all packages

on:
  schedule:
    - cron: "0 0 15 * *"
  workflow_dispatch:
    inputs:
      library:
        description: "Library to build and test."

jobs:
  # Base image build
  build_base:
    if: >-
      github.repository == 'numericalpdes/docker' && (
        github.event_name == 'schedule' || github.event.inputs.library == 'base'
      )
    uses: numericalpdes/docker/.github/workflows/release.yml@main
    with:
      library: "base"
      args: ""

  # Boost build
  build_boost:
    needs: [build_base]
    if: >-
      github.repository == 'numericalpdes/docker' && (
        (
          github.event_name == 'schedule' && needs.build_base.result == 'success'
        ) || (
          github.event_name != 'schedule' && github.event.inputs.library == 'boost' && needs.build_base.result == 'skipped' && always() && !cancelled()
        ) || (
          github.event_name != 'schedule' && github.event.inputs.library != 'boost' && needs.build_base.result == 'success' && always() && !cancelled()
        )
      )
    uses: numericalpdes/docker/.github/workflows/release.yml@main
    with:
      library: "boost"
      args: ""

  # mpi4py build
  build_mpi4py:
    needs: [build_base]
    if: >-
      github.repository == 'numericalpdes/docker' && (
        (
          github.event_name == 'schedule' && needs.build_base.result == 'success'
        ) || (
          github.event_name != 'schedule' && github.event.inputs.library == 'mpi4py' && needs.build_base.result == 'skipped' && always() && !cancelled()
        ) || (
          github.event_name != 'schedule' && github.event.inputs.library != 'mpi4py' && needs.build_base.result == 'success' && always() && !cancelled()
        )
      )
    uses: numericalpdes/docker/.github/workflows/release.yml@main
    with:
      library: "mpi4py"
      args: ""

  # OCC build
  build_occ:
    needs: [build_base]
    if: >-
      github.repository == 'numericalpdes/docker' && (
        (
          github.event_name == 'schedule' && needs.build_base.result == 'success'
        ) || (
          github.event_name != 'schedule' && github.event.inputs.library == 'occ' && needs.build_base.result == 'skipped' && always() && !cancelled()
        ) || (
          github.event_name != 'schedule' && github.event.inputs.library != 'occ' && needs.build_base.result == 'success' && always() && !cancelled()
        )
      )
    uses: numericalpdes/docker/.github/workflows/release.yml@main
    with:
      library: "occ"
      args: ""

  # h5py build
  build_h5py:
    needs: [build_mpi4py]
    if: >-
      github.repository == 'numericalpdes/docker' && (
        (
          github.event_name == 'schedule' && needs.build_mpi4py.result == 'success'
        ) || (
          github.event_name != 'schedule' && github.event.inputs.library == 'h5py' && needs.build_mpi4py.result == 'skipped' && always() && !cancelled()
        ) || (
          github.event_name != 'schedule' && github.event.inputs.library != 'h5py' && needs.build_mpi4py.result == 'success' && always() && !cancelled()
        )
      )
    uses: numericalpdes/docker/.github/workflows/release.yml@main
    with:
      library: "h5py"
      args: ""

  # pybind11 build
  build_pybind11:
    needs: [build_mpi4py]
    if: >-
      github.repository == 'numericalpdes/docker' && (
        (
          github.event_name == 'schedule' && needs.build_mpi4py.result == 'success'
        ) || (
          github.event_name != 'schedule' && github.event.inputs.library == 'pybind11' && needs.build_mpi4py.result == 'skipped' && always() && !cancelled()
        ) || (
          github.event_name != 'schedule' && github.event.inputs.library != 'pybind11' && needs.build_mpi4py.result == 'success' && always() && !cancelled()
        )
      )
    uses: numericalpdes/docker/.github/workflows/release.yml@main
    with:
      library: "pybind11"
      args: ""

  # petsc4py/real build
  build_petsc4py_real:
    needs: [build_h5py]
    if: >-
      github.repository == 'numericalpdes/docker' && (
        (
          github.event_name == 'schedule' && needs.build_h5py.result == 'success'
        ) || (
          github.event_name != 'schedule' && github.event.inputs.library == 'petsc4py' && needs.build_h5py.result == 'skipped' && always() && !cancelled()
        ) || (
          github.event_name != 'schedule' && github.event.inputs.library != 'petsc4py' && needs.build_h5py.result == 'success' && always() && !cancelled()
        )
      )
    uses: numericalpdes/docker/.github/workflows/release.yml@main
    with:
      library: "petsc4py"
      args: "real"

  # petsc4py/complex build
  build_petsc4py_complex:
    needs: [build_h5py]
    if: >-
      github.repository == 'numericalpdes/docker' && (
        (
          github.event_name == 'schedule' && needs.build_h5py.result == 'success'
        ) || (
          github.event_name != 'schedule' && github.event.inputs.library == 'petsc4py' && needs.build_h5py.result == 'skipped' && always() && !cancelled()
        ) || (
          github.event_name != 'schedule' && github.event.inputs.library != 'petsc4py' && needs.build_h5py.result == 'success' && always() && !cancelled()
        )
      )
    uses: numericalpdes/docker/.github/workflows/release.yml@main
    with:
      library: "petsc4py"
      args: "complex"

  # vtk build
  build_vtk:
    needs: [build_h5py]
    if: >-
      github.repository == 'numericalpdes/docker' && (
        (
          github.event_name == 'schedule' && needs.build_h5py.result == 'success'
        ) || (
          github.event_name != 'schedule' && github.event.inputs.library == 'vtk' && needs.build_h5py.result == 'skipped' && always() && !cancelled()
        ) || (
          github.event_name != 'schedule' && github.event.inputs.library != 'vtk' && needs.build_h5py.result == 'success' && always() && !cancelled()
        )
      )
    uses: numericalpdes/docker/.github/workflows/release.yml@main
    with:
      library: "vtk"
      args: ""

  # slepc4py/real build
  build_slepc4py_real:
    needs: [build_petsc4py_real]
    if: >-
      github.repository == 'numericalpdes/docker' && (
        (
          github.event_name == 'schedule' && needs.build_petsc4py_real.result == 'success'
        ) || (
          github.event_name != 'schedule' && github.event.inputs.library == 'slepc4py' && needs.build_petsc4py_real.result == 'skipped' && always() && !cancelled()
        ) || (
          github.event_name != 'schedule' && github.event.inputs.library != 'slepc4py' && needs.build_petsc4py_real.result == 'success' && always() && !cancelled()
        )
      )
    uses: numericalpdes/docker/.github/workflows/release.yml@main
    with:
      library: "slepc4py"
      args: "real"

  # slepc4py/complex build
  build_slepc4py_complex:
    needs: [build_petsc4py_complex]
    if: >-
      github.repository == 'numericalpdes/docker' && (
        (
          github.event_name == 'schedule' && needs.build_petsc4py_complex.result == 'success'
        ) || (
          github.event_name != 'schedule' && github.event.inputs.library == 'slepc4py' && needs.build_petsc4py_complex.result == 'skipped' && always() && !cancelled()
        ) || (
          github.event_name != 'schedule' && github.event.inputs.library != 'slepc4py' && needs.build_petsc4py_complex.result == 'success' && always() && !cancelled()
        )
      )
    uses: numericalpdes/docker/.github/workflows/release.yml@main
    with:
      library: "slepc4py"
      args: "complex"

  # Warn if scheduled workflow is about to be disabled
  warn:
    runs-on: ubuntu-latest
    if: github.repository == 'numericalpdes/docker' && github.ref == 'refs/heads/main' && github.event_name == 'schedule'
    steps:
      - name: Warn if scheduled workflow is about to be disabled
        uses: fem-on-colab/warn-workflow-about-to-be-disabled-action@main
        with:
          workflow-filename: schedule_all.yml
          days-elapsed: 28

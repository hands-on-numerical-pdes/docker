name: Release new docker image associated to package

on:
  workflow_dispatch:
    inputs:
      library:
        description: "Library to build"
      args:
        description: "Additional space separated arguments to be passed to the build script. If empty, no arguments are passed"
  workflow_call:
    inputs:
      library:
        description: "Library to build"
        type: string
      args:
        description: "Additional space separated arguments to be passed to the build script. If empty, no arguments are passed"
        type: string

jobs:
  release:
    strategy:
      matrix:
        include:
          - arch: amd64
            os: ubuntu-latest
          - arch: arm64
            os: ubuntu-24.04-arm
      fail-fast: false
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - name: Determine image name
        id: image_name
        run: |
          LIBRARY=${{ (inputs || github.event.inputs).library }}
          ARCH=${{ matrix.arch }}
          ARGS="${{ (inputs || github.event.inputs).args }}"
          if [ -z "${ARGS}" ]; then
            IMAGE_NAME=ghcr.io/numericalpdes/${LIBRARY}:latest-${ARCH}
          else
            IMAGE_NAME=ghcr.io/numericalpdes/${LIBRARY}-${ARGS}:latest-${ARCH}
          fi
          echo "image_name=${IMAGE_NAME}" >> ${GITHUB_OUTPUT}
      - name: Build docker image
        run: |
          LIBRARY=${{ (inputs || github.event.inputs).library }}
          ARCH=${{ matrix.arch }}
          ARGS="${{ (inputs || github.event.inputs).args }}"
          IMAGE_NAME="${{ steps.image_name.outputs.image_name }}"
          docker build --pull -t ${IMAGE_NAME} -f ${LIBRARY}/Dockerfile --build-arg ARCH=${ARCH} --build-arg ARGS=${ARGS} .
      - name: Test docker image
        run: |
          LIBRARY=${{ (inputs || github.event.inputs).library }}
          ARCH=${{ matrix.arch }}
          ARGS="${{ (inputs || github.event.inputs).args }}"
          IMAGE_NAME="${{ steps.image_name.outputs.image_name }}"
          docker run -i ${IMAGE_NAME} bash -c "if [ \"${LIBRARY}\" != \"base\" ]; then /usr/local/share/numerical-pdes-docker/scripts/run_test_notebooks.sh \"${ARCH}\" \"${ARGS}\" \"${LIBRARY}\"; fi"
      - name: Log into the docker registry
        if: github.repository == 'numericalpdes/docker'
        run: echo ${{ secrets.GITHUB_TOKEN }} | docker login ghcr.io -u ${{ github.actor }} --password-stdin
      - name: Push to the docker registry
        if: github.repository == 'numericalpdes/docker'
        run: |
          IMAGE_NAME="${{ steps.image_name.outputs.image_name }}"
          docker push ${IMAGE_NAME}

  publish-multiarch-docker:
    needs: [release]
    if: github.repository == 'numericalpdes/docker'
    runs-on: ubuntu-latest
    steps:
      - name: Determine image name
        id: image_name
        run: |
          LIBRARY=${{ (inputs || github.event.inputs).library }}
          ARGS="${{ (inputs || github.event.inputs).args }}"
          if [ -z "${ARGS}" ]; then
            IMAGE_NAME=ghcr.io/numericalpdes/${LIBRARY}:latest
          else
            IMAGE_NAME=ghcr.io/numericalpdes/${LIBRARY}-${ARGS}:latest
          fi
          echo "image_name=${IMAGE_NAME}" >> ${GITHUB_OUTPUT}
      - name: Log into the docker registry
        run: echo ${{ secrets.GITHUB_TOKEN }} | docker login ghcr.io -u ${{ github.actor }} --password-stdin
      - name: Push to the docker registry
        run: |
          IMAGE_NAME="${{ steps.image_name.outputs.image_name }}"
          docker buildx imagetools create -t ${IMAGE_NAME} ${IMAGE_NAME}-amd64 ${IMAGE_NAME}-arm64
